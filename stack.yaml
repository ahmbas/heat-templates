heat_template_version: 2013-05-23

description: HOT template for two interconnected VMs with floating ips.

parameters:
    user_data:
      type: string
      description: Server user_data

resources:

  private_net:
        type: OS::Neutron::Net
        properties:
          name: internal_network

  private_subnet:
        type: OS::Neutron::Subnet
        properties:
          network_id: { get_resource: private_net }
          cidr: 172.16.2.0/24
          gateway_ip: 172.16.2.1

  router1_interface:
        type: OS::Neutron::RouterInterface
        properties:
          router_id: router1
          subnet_id: { get_resource: private_subnet }

  server1_port:
        type: OS::Neutron::Port
        properties:
          network_id: { get_resource: private_net }
          security_groups: [ get_resource: server_security_group ]
          fixed_ips:
                - subnet_id: { get_resource: private_subnet }

  server1_floating_ip:
        type: OS::Neutron::FloatingIP
        properties:
          floating_network_id: external_network
          port_id: { get_resource: server1_port }

  server_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: http-https-ssh
      rules: [
        {remote_ip_prefix: 0.0.0.0/0,
        protocol: tcp,
        port_range_min: 22,
        port_range_max: 22},
        {remote_ip_prefix: 0.0.0.0/0,
        protocol: tcp,
        port_range_min: 80,
        port_range_max: 80},
        {remote_ip_prefix: 0.0.0.0/0,
        protocol: tcp,
        port_range_min: 443,
        port_range_max: 443}]

  # Centos Image
  centos_image:
    type: OS::Glance::Image
    properties:
      container_format: bare
      disk_format: qcow2
      name: Centos
      location: http://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud-1705.qcow2c

# START SERVERS
  server1:
        type: OS::Nova::Server
        properties:
          name: Server1
          image: { get_resource: centos_image }
          flavor: m1.small
          networks:
                - port: { get_resource: server1_port }
          user_data_format: RAW
          user_data: {get_param: user_data}

  server2:
        type: OS::Nova::Server
        properties:
          name: Server2
          image: { get_resource: centos_image }
          flavor: m1.small
          networks:
                - port: { get_resource: server2_port }
          user_data_format: RAW
          user_data: {get_param: user_data}
# END SERVERS

# START VOLUMES
  cinder_volume_1_server_1:
    type: OS::Cinder::Volume
    properties:
      size: 4
      availability_zone: nova

  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: cinder_volume_1_server_1 }
      instance_uuid: { get_resource: server1 }
      mountpoint: /dev/vde

  cinder_volume_2_server_1:
    type: OS::Cinder::Volume
    properties:
      size: 1
      availability_zone: nova

  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: cinder_volume_2_server_1 }
      instance_uuid: { get_resource: server1 }
      mountpoint: /dev/vdf

  cinder_volume_1_server_2:
    type: OS::Cinder::Volume
    properties:
      size: 4
      availability_zone: nova

  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: cinder_volume_1_server_2 }
      instance_uuid: { get_resource: server2 }
      mountpoint: /dev/vde

  cinder_volume_2_server_2:
    type: OS::Cinder::Volume
    properties:
      size: 1
      availability_zone: nova

  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: cinder_volume_2_server_2 }
      instance_uuid: { get_resource: server2 }
      mountpoint: /dev/vdf
# END VOLUMES

  server2_port:
        type: OS::Neutron::Port
        properties:
          network_id: { get_resource: private_net }
          security_groups: [ get_resource: server_security_group ]
          fixed_ips:
                - subnet_id: { get_resource: private_subnet }

  server2_floating_ip:
        type: OS::Neutron::FloatingIP
        properties:
          floating_network_id: external_network
          port_id: { get_resource: server2_port }

outputs:
  server1_private_ip:
        description: Private IP address of server1
        value: { get_attr: [ server1, first_address ] }
  server1_public_ip:
        description: Floating IP address of server1
        value: { get_attr: [ server1_floating_ip, floating_ip_address ] }
  server2_private_ip:
        description: Private IP address of server2
        value: { get_attr: [ server2, first_address ] }
  server2_public_ip:
        description: Floating IP address of server2
        value: { get_attr: [ server2_floating_ip, floating_ip_address ] }
